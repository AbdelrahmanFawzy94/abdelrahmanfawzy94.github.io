{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/order/order-routing.module.ts","webpack:///src/app/modules/dashboard/pages/order/order.component.ts","webpack:///src/app/modules/dashboard/pages/order/order.component.html","webpack:///src/app/modules/dashboard/pages/order/order.module.ts"],"names":["routes","path","component","OrderRoutingModule","forChild","imports","exports","modalRef","OrderComponent","authService","systemService","userService","orderService","route","modalService","agentPath","folderPersonalPhotosPath","params","subscribe","orderId","Number","parseInt","baseURL","getBaseURL","loadCountries","loadProductsTypes","loadPaymentTypes","loadOrderData","id","getOrder","data","orderData","console","log","loadCities","agent","countryId","countries$","getCountries","cities$","getCities","event","target","value","productTypes$","getProductTypes","paymentTypes$","getPaymentTypes","template","show","Object","assign","birthCountryChange","showTemplate","selector","templateUrl","styleUrls","OrderModule","declarations","providers"],"mappings":"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","file":"pages-order-order-module-es5.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { OrderComponent } from './order.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrderRoutingModule {}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport {\r\n  AdminUser,\r\n  AgentUser,\r\n  BoxType,\r\n  City,\r\n  Country,\r\n  DriverUser,\r\n  Order,\r\n  OrderStatusTypes,\r\n  PaymentType,\r\n  ProductType,\r\n  StatusAction,\r\n  StatusTypes,\r\n  SupportUser,\r\n  User,\r\n  UserBox,\r\n  UserVehicle,\r\n  Vehicle,\r\n} from '../../../../@core/models/data-objects';\r\nimport { Observable } from 'rxjs';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { AuthService } from '../../../../@core/services/auth/auth.service';\r\nimport { SystemService } from '../../../../@core/services/system/system.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { AdminService } from '../admins/admin.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrderService } from '../orders/order.service';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss'],\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  orderId: number;\r\n  userType: string;\r\n  userData: User;\r\n  orderData: Order;\r\n  countries$: Observable<Country[]>;\r\n  cities$: Observable<City[]>;\r\n  productTypes$: Observable<ProductType[]>;\r\n  paymentTypes$: Observable<PaymentType[]>;\r\n  baseURL: string;\r\n  modalRef: BsModalRef;\r\n  formData: FormData;\r\n  agentPath = 'Agents';\r\n  folderPersonalPhotosPath = 'PersonalPhotos';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private systemService: SystemService,\r\n    private userService: UserService,\r\n    private orderService: OrderService,\r\n    private route: ActivatedRoute,\r\n    private modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params) => {\r\n      this.orderId = Number.parseInt(params['id']);\r\n    });\r\n\r\n    this.baseURL = this.authService.getBaseURL();\r\n    //this.userData = this.authService.getLoggedUser().supportUser;\r\n    this.loadCountries();\r\n    this.loadProductsTypes();\r\n    this.loadPaymentTypes();\r\n    //console.log(this.userData);\r\n\r\n    this.loadOrderData(this.orderId);\r\n  }\r\n\r\n  loadOrderData(id: number) {\r\n    this.orderService.getOrder(id).subscribe((data) => {\r\n      this.orderData = data;\r\n\r\n      console.log(this.orderData);\r\n      this.loadCities(this.orderData.agent.countryId);\r\n    });\r\n  }\r\n\r\n  loadCountries() {\r\n    this.countries$ = this.systemService.getCountries();\r\n  }\r\n\r\n  loadCities(countryId: number): void {\r\n    this.cities$ = this.systemService.getCities(countryId);\r\n  }\r\n\r\n  birthCountryChange(event): void {\r\n    this.loadCities(event.target.value);\r\n  }\r\n\r\n  loadProductsTypes() {\r\n    this.productTypes$ = this.systemService.getProductTypes();\r\n    console.log(this.productTypes$);\r\n  }\r\n\r\n  loadPaymentTypes() {\r\n    this.paymentTypes$ = this.systemService.getPaymentTypes();\r\n    console.log(this.paymentTypes$);\r\n  }\r\n\r\n  saveOrderItems() {}\r\n\r\n  save() {}\r\n\r\n  getStatusName(id: number): string {\r\n    return OrderStatusTypes[id];\r\n  }\r\n\r\n  showTemplate(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'gray modal-lg' })\r\n    );\r\n  }\r\n}\r\n","<div class=\"py-4\">\r\n  <div class=\"row\">\r\n    <div class=\"my-2 col-xl-8 col-md-7\">\r\n      <div class=\"card\">\r\n        <div\r\n          class=\"card-header card-header-shadow gradient-info text-white border-0 inside-card\"\r\n        >\r\n          <h2 class=\"font-weight-normal mb-1 text-capitalize\">Order number [ {{orderData.id}} ]</h2>\r\n          <p class=\"card-text mb-1\"></p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form class=\"row\">\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Agent</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"fullname\"\r\n                [(ngModel)]=\"orderData.agent.fullname\"\r\n              />\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Product Type</label>\r\n              <select class=\"form-control\" name=\"productType\"\r\n                      [(ngModel)]=\"orderData.productTypeId\">\r\n                <option *ngFor=\"let productType of productTypes$ | async\" [value]=\"productType.id\">{{productType.type}}</option>\r\n              </select>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Customer</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"customerName\"\r\n                [(ngModel)]=\"orderData.customerName\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Customer Phone</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"customerPhone\"\r\n                [(ngModel)]=\"orderData.customerPhone\"\r\n              /> \r\n            </div>\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Country</label>\r\n              <select class=\"form-control\" name=\"country\"\r\n                      [(ngModel)]=\"orderData.agent.countryId\"\r\n                      (change)=\"birthCountryChange($event)\">\r\n                <option *ngFor=\"let country of countries$ | async\" [value]=\"country.id\">{{country.name}}</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">City</label>\r\n              <select\r\n                class=\"form-control\"\r\n                name=\"city\"\r\n                [(ngModel)]=\"orderData.agent.cityId\">\r\n                <option *ngFor=\"let city of cities$ | async\" [value]=\"city.id\">{{city.name}}</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Payment Type</label>\r\n              <select class=\"form-control\" name=\"paymentType\"\r\n                      [(ngModel)]=\"orderData.paymentTypeId\">\r\n                <option *ngFor=\"let paymentType of paymentTypes$ | async\" [value]=\"paymentType.id\">{{paymentType.type}}</option>\r\n              </select>\r\n            </div>\r\n\r\n\r\n            <div  class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Description</label>\r\n              <input\r\n\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"description\"\r\n                [(ngModel)]=\"orderData.description\"\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Pick up Location Latitude</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"pickupLocationLat\"\r\n                [(ngModel)]=\"orderData.pickupLocationLat\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Pick up Location Longitude</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"pickupLocationLong\"\r\n                [(ngModel)]=\"orderData.pickupLocationLong\"\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Drop Location Latitude</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"dropLocationLat\"\r\n                [(ngModel)]=\"orderData.dropLocationLat\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Drop Location Longitude</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"dropLocationLong\"\r\n                [(ngModel)]=\"orderData.dropLocationLong\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">address</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"address\"\r\n                [(ngModel)]=\"orderData.customerAddress\"\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <button (click)=\"showTemplate(orderItems)\" class=\"btn btn-warning text-capitalize\">\r\n                Order Items\r\n              </button>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <button (click)=\"showTemplate(orderStatus)\" class=\"btn btn-warning text-capitalize\">\r\n                Order Status\r\n              </button>\r\n            </div>\r\n\r\n\r\n<!--            <div   class=\"col-md-12 d-flex justify-content-center\">-->\r\n<!--              <button (click)=\"save()\" class=\"btn btn-info text-capitalize\">-->\r\n<!--                Save-->\r\n<!--              </button>-->\r\n<!--            </div>-->\r\n\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #orderItems>\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Items</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form class=\"row\">\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <table style=\"width:100%;height:100%\">\r\n              <tr>\r\n                <th>Item</th>\r\n                <th>Quantity</th>\r\n                <th>Price</th>\r\n                <th>Description</th>\r\n              </tr>\r\n              <tr *ngFor=\"let item of orderData.orderItems  \" >\r\n                <td>{{item.item}}</td>\r\n                <td>{{item.quantity}}</td>\r\n                <td>{{item.price}}</td>\r\n                <td>{{item.description}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n<!--        <button type=\"button\" class=\"btn btn-success\" (click)=\"saveOrderItems()\">Save</button>-->\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">Close</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #orderStatus>\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Items</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form class=\"row\">\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <table style=\"width:100%;height:100%\">\r\n              <tr>\r\n                <th>Status</th>\r\n                <th>Date</th>\r\n                <th></th>\r\n\r\n              </tr>\r\n              <tr *ngFor=\"let status of orderData.orderCurrentStatus  \" >\r\n                <td>{{getStatusName( status.statusTypeId)}}</td>\r\n                <td>{{status.creationDate}}</td>\r\n                <td *ngIf=\"status.isCurrent\">Current</td>\r\n              </tr>\r\n              <tr *ngFor=\"let status of orderData.orderStatusHistories  \" >\r\n                <td>{{getStatusName( status.orderStatusId)}}</td>\r\n                <td>{{status.creationDate}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">Close</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"my-2 col-xl-4 col-md-5\">\r\n      <div class=\"card\">\r\n\r\n        <div *ngIf=\"orderData.agent.image == null || orderData.agent.image ===''  \" class=\"avatar\">\r\n          <img\r\n            src=\"https://ncbae.edu.pk/alhamra_new/wp-content/uploads/2016/08/person-2-200x200.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div *ngIf=\"orderData.agent.image != null && orderData.agent.image !==''  \" class=\"avatar\">\r\n          <img\r\n            [src]=\"baseURL+\r\n            '/' +\r\n             agentPath +\r\n             '/' +\r\n             orderData.agent.id +\r\n             '/'+\r\n             folderPersonalPhotosPath +\r\n             '/' + orderData.agent.image\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title text-center\">{{ orderData.agent.fullname }}</h2>\r\n          <div class=\"data my-3\">\r\n            <div class=\"part my-2\">\r\n              <i class=\"far fa-at\"></i>\r\n              {{ orderData.agent.email }}\r\n            </div>\r\n            <div class=\"part my-2\">\r\n              <i class=\"fas fa-map-marker-alt\"></i>\r\n              {{\r\n              orderData.agent.address\r\n                ? orderData.agent.address\r\n                : 'none'\r\n              }}\r\n            </div>\r\n            <div class=\"part my-2\">\r\n              <i class=\"fas fa-phone-alt\"></i>\r\n              {{\r\n              orderData.agent.mobile\r\n                ? orderData.agent.mobile\r\n                : 'none'\r\n              }}\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../../../shared/shared.module'; ////////////////////////////////////////////////////////////////\r\nimport { OrderRoutingModule } from './order-routing.module';\r\n\r\nimport { OrderComponent } from './order.component';\r\n\r\n@NgModule({\r\n  declarations: [OrderComponent],\r\n  imports: [CommonModule, OrderRoutingModule, SharedModule],\r\n  providers: [],\r\n})\r\nexport class OrderModule {}\r\n"]}