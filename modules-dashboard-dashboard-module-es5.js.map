{"version":3,"sources":["webpack:///src/app/@core/services/system/system.service.ts","webpack:///src/app/modules/dashboard/dashboard-routing.module.ts","webpack:///src/app/modules/dashboard/dashboard.component.ts","webpack:///src/app/modules/dashboard/dashboard.component.html","webpack:///src/app/modules/dashboard/dashboard.module.ts","webpack:///src/app/modules/dashboard/pages/admins/admin.service.ts","webpack:///src/app/modules/dashboard/pages/admins/admins.component.ts","webpack:///src/app/modules/dashboard/pages/admins/admins.component.html","webpack:///src/app/modules/dashboard/pages/charts/charts.component.ts","webpack:///src/app/modules/dashboard/pages/charts/charts.component.html","webpack:///src/app/modules/dashboard/pages/user/user.component.ts","webpack:///src/app/modules/dashboard/pages/user/user.component.html","webpack:///src/app/modules/dashboard/pages/user/user.service.ts"],"names":["options","headers","SystemService","httpClient","get","pipe","data","error","id","url","toString","statusAction","put","countryPrice","post","settings","providedIn","routes","path","component","children","preload","loadChildren","then","m","ProfileModule","MakingOrderModule","OrdersModule","OrderModule","DashboardRoutingModule","forChild","imports","exports","SupportDashboardComponent","loader","router","pageTitle","authService","translate","hideTitle","showLoader","showLangMenu","currentLang","currentFlag","closedNav","openUserMenu","scrolled","currentPage","loggedUser","showLoader$","subscribe","boolen","getLoggedUser","localStorageLang","localStorage","getItem","use","lang","document","body","classList","add","remove","subMenuInit","fixedNavTop","getCurrentPage","closeSidenavMenus","scrollToTop","e","elemnt","target","setItem","element","menu","nextElementSibling","toggle","console","log","sidenavLinks","forEach","link","contains","navigateByUrl","urlArray","split","indexOfPath","length","includes","replace","setTitle","Array","from","nativeElement","li","onclick","item","container","onscroll","scrollTop","scrollTo","top","behavior","clear","openNav","navigateToDashboard","toggleUserMenu","logout","toggleNav","toggleLang","changeLang","selector","templateUrl","styleUrls","DashboardModule","declarations","providers","AdminService","pagination","adminUser","AdminsComponent","adminService","isLoading","displayedColumns","total","page","perPage","baseURL","assetsPath","personalPhotosPath","getBaseURL","getAdminUsers","getUsers","numberOfObjectsPerPage","dataSource","users","pageIndex","pageSize","navigate","newAdmin","onPageChanges","ChartsComponent","chartType","chartValues","chartLabels","chartLegendVisibility","modalRef","UserComponent","systemService","userService","route","modalService","isReviewing","supportPath","adminPath","folderPersonalPhotosPath","params","userId","Number","parseInt","userType","loadCountries","toLowerCase","userData","loadDriverUserData","loadAdminUserData","template","show","Object","assign","getDriverUserData","currentStatusId","Reviewing","userVehicles","userVehicle","userBoxes","userBox","loadCities","countryId","loadResidenceCities","residenceCountryId","loadVehicles","loadBoxTypes","getUser","vehicles$","getVehicles","boxTypes$","getBoxTypes","countries$","residenceCountries$","getCountries","residenceCities$","getCities","cities$","event","value","saveDriverData","saveAdminData","updateAdmin","result","addAdmin","prepareImagesData","updateDriver","submitDriverPictures","formData","push","hide","FormData","blob","Blob","append","personalPhotoFile","name","nationalNumberPhotoFile","licenseImageFile","vehicleImageFile","checked","statusTypeId","Stopped","Working","changeUserStatus","Suspended","files","file","extension","type","uniqueNumber","Math","floor","Date","valueOf","random","fileName","vehicleImageName","File","licenseImageName","nationalNumberImageName","personalImageName","input","fileInput","click","controlName","getAttribute","addEventListener","inputt","blur","birthCountryChange","UserService","driver"],"mappings":"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","file":"modules-dashboard-dashboard-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport {\r\n  BoxType,\r\n  City,\r\n  Country, CountryPrice, IgnorPerType,\r\n  PaymentType, PenaltyPerType,\r\n  ProductType, RejectPerType,\r\n  StatusAction,\r\n  SystemSetting,\r\n  Vehicle\r\n} from \"../../models/data-objects\";\r\n\r\n// let httpHeaders = new HttpHeaders({\r\n//   'Content-Type' : 'application/json'\r\n// });\r\nconst options = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  }),\r\n  // observe: 'response'\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SystemService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getCountries(): Observable<Country[]> {\r\n    return this.httpClient.get('country').pipe(\r\n      map((data: Country[]) => {\r\n        return data;\r\n      }),\r\n      catchError((error) => {\r\n        return throwError('Errrorrrr not found!');\r\n      })\r\n    );\r\n  }\r\n\r\n  public getCities(id: number): Observable<City[]> {\r\n    const url: string = 'country/getCitiesByCountry/' + id.toString();\r\n    return this.httpClient.get(url).pipe(\r\n      map((data: City[]) => {\r\n        return data;\r\n      }),\r\n      catchError((error) => {\r\n        return throwError('Errrorrrr not found!');\r\n      })\r\n    );\r\n  }\r\n\r\n  public changeUserStatus(\r\n    statusAction: StatusAction\r\n  ): Observable<boolean> {\r\n    return this.httpClient\r\n\r\n      .put('system/changeUserStatus',statusAction ,options)\r\n      .pipe(\r\n        map((data: boolean) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public getVehicles() : Observable<Vehicle[]> {\r\n    return this.httpClient.get(\"system/vehicles\").pipe(\r\n      map((data: Vehicle[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public getBoxTypes() : Observable<BoxType[]> {\r\n    return this.httpClient.get(\"system/boxTypes\").pipe(\r\n      map((data: BoxType[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public getProductTypes() : Observable<ProductType[]> {\r\n    return this.httpClient.get(\"request/productsTypes\").pipe(\r\n      map((data: ProductType[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public getPaymentTypes() : Observable<PaymentType[]> {\r\n    return this.httpClient.get(\"request/paymentTypes\").pipe(\r\n      map((data: PaymentType[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n  public getCurrentSystemSettings() : Observable<SystemSetting> {\r\n    return this.httpClient.get(\"system\").pipe(\r\n      map((data: SystemSetting) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n  public getcountriesPrices() : Observable<CountryPrice[]> {\r\n    return this.httpClient.get(\"system/countriesPrices\").pipe(\r\n      map((data: CountryPrice[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n  public addCountriesPrices( countryPrice : CountryPrice) : Observable<boolean> {\r\n    return this.httpClient.post(\"system/countriesPrices\",countryPrice,options).pipe(\r\n      map((data: boolean) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public getRejectPerTypes() : Observable<RejectPerType[]> {\r\n    return this.httpClient.get(\"system/rejectPerTypes\").pipe(\r\n      map((data: RejectPerType[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public getIgnorePerTypes() : Observable<IgnorPerType[]> {\r\n    return this.httpClient.get(\"system/ignorePerTypes\").pipe(\r\n      map((data: IgnorPerType[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPenaltyPerTypes() : Observable<PenaltyPerType[]> {\r\n    return this.httpClient.get(\"system/penaltyPerTypes\").pipe(\r\n      map((data: PenaltyPerType[]) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public saveConfigurations( settings:SystemSetting) : Observable<boolean> {\r\n    return this.httpClient.post(\"system\",settings,options).pipe(\r\n      map((data: boolean) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { SupportDashboardComponent } from './dashboard.component';\r\nimport { ChartsComponent } from './pages/charts/charts.component';\r\nimport { UserComponent } from './pages/user/user.component';\r\nimport { AdminsComponent } from './pages/admins/admins.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SupportDashboardComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ChartsComponent,\r\n      },\r\n      {\r\n        path: 'profile',\r\n        data: {\r\n          preload: true,\r\n        },\r\n        loadChildren: () =>\r\n          import('./pages/#profile/profile.module').then(\r\n            (m) => m.ProfileModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'user/:id/:type',\r\n        component: UserComponent,\r\n      },\r\n      {\r\n        path: 'admins',\r\n        component: AdminsComponent,\r\n      },\r\n      {\r\n        path: 'new-order',\r\n        data: {\r\n          preload: true,\r\n        },\r\n        loadChildren: () =>\r\n          import('./pages/making-order/making-order.module').then(\r\n            (m) => m.MakingOrderModule\r\n          ),\r\n      },\r\n      {\r\n        path: 'orders',\r\n        data: {\r\n          preload: true,\r\n        },\r\n        loadChildren: () =>\r\n          import('./pages/orders/orders.module').then((m) => m.OrdersModule),\r\n      },\r\n      {\r\n        path: 'order/:id',\r\n        data: {\r\n          preload: true,\r\n        },\r\n        loadChildren: () =>\r\n          import('./pages/order/order.module').then((m) => m.OrderModule),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { LoaderService } from '../shared/services/loader.service';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { AuthService } from '../../@core/services/auth/auth.service';\r\nimport { AgentUser, SupportUserAccount } from '../../@core/models/data-objects';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n})\r\nexport class SupportDashboardComponent\r\n  implements OnInit, AfterViewInit, AfterViewChecked {\r\n  @ViewChild('container') container: ElementRef<HTMLDivElement>;\r\n  @ViewChild('menu') menu: ElementRef<any>;\r\n\r\n  hideTitle = true;\r\n  showLoader = false;\r\n  showLangMenu = false;\r\n  currentLang = '';\r\n  currentFlag = '../../../../assets/images/en.jpg';\r\n  closedNav = true;\r\n  openUserMenu = false;\r\n  scrolled = false;\r\n  currentPage = '';\r\n  loggedUser: AgentUser = new AgentUser();\r\n  // sub menu in side menu\r\n  sidenavLinks: HTMLElement[];\r\n\r\n  constructor(\r\n    private loader: LoaderService,\r\n    private router: Router,\r\n    private pageTitle: Title,\r\n    private authService: AuthService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loader.showLoader$.subscribe((boolen) => {\r\n      this.showLoader = boolen;\r\n    });\r\n    this.loggedUser = this.authService.getLoggedUser();\r\n\r\n    // need to inhance later\r\n    let localStorageLang;\r\n    if (localStorage.getItem('lang')) {\r\n      localStorageLang = localStorage.getItem('lang');\r\n\r\n      this.translate.use(localStorageLang).subscribe((lang) => {\r\n        if (localStorageLang === 'ar') {\r\n          document.body.classList.add('rtl');\r\n          this.currentLang = 'ar';\r\n          this.currentFlag = '../../../../assets/images/ar.jpg';\r\n        } else {\r\n          document.body.classList.remove('rtl');\r\n          this.currentLang = 'en';\r\n          this.currentFlag = '../../../../assets/images/en.jpg';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.subMenuInit();\r\n    this.fixedNavTop();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // this.closeSidenavMenus();\r\n    this.getCurrentPage();\r\n  }\r\n\r\n  // end of life cycle hooks\r\n\r\n  toggleNav() {\r\n    this.closedNav = !this.closedNav;\r\n    if (this.closedNav === true) {\r\n      this.openUserMenu = false;\r\n      this.closeSidenavMenus();\r\n    }\r\n    this.scrollToTop();\r\n  }\r\n\r\n  toggleLang() {\r\n    this.showLangMenu = !this.showLangMenu;\r\n  }\r\n\r\n  changeLang(e: Event) {\r\n    const elemnt = e.target as HTMLLIElement;\r\n    this.translate.use(elemnt.id).subscribe((data) => {\r\n      this.currentLang = elemnt.id;\r\n      if (this.translate.currentLang === 'ar') {\r\n        document.body.classList.add('rtl');\r\n        this.hideTitle = true;\r\n        this.currentFlag = '../../../../assets/images/ar.jpg';\r\n        localStorage.setItem('lang', 'ar');\r\n      } else {\r\n        document.body.classList.remove('rtl');\r\n        this.hideTitle = false;\r\n        this.currentFlag = '../../../../assets/images/en.jpg';\r\n        localStorage.setItem('lang', 'en');\r\n      }\r\n    });\r\n  }\r\n\r\n  openNav() {\r\n    this.closedNav = false;\r\n    this.scrollToTop();\r\n  }\r\n\r\n  toggleUserMenu() {\r\n    this.openUserMenu = !this.openUserMenu;\r\n  }\r\n\r\n  toggleNotification(e: Event) {\r\n    const element = e.target as HTMLElement;\r\n    const menu = element.nextElementSibling.nextElementSibling;\r\n    menu.classList.toggle('active');\r\n  }\r\n\r\n  closeNotification(e: Event) {\r\n    console.log(e);\r\n  }\r\n\r\n  closeSidenavMenus() {\r\n    if (this.closedNav === true) {\r\n      this.sidenavLinks.forEach((link) => {\r\n        if (link.classList.contains('active')) {\r\n          link.classList.remove('active');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  navigateToDashboard() {\r\n    this.router.navigateByUrl('dashboard');\r\n  }\r\n\r\n  getCurrentPage() {\r\n    const url = this.router.url as string;\r\n    const urlArray = url.split('/');\r\n    const indexOfPath = urlArray.length - 1;\r\n    this.currentPage = urlArray[indexOfPath];\r\n    if (this.currentPage.includes('-')) {\r\n      this.currentPage = this.currentPage.replace('-', ' ');\r\n    }\r\n    this.pageTitle.setTitle(this.currentPage);\r\n  }\r\n\r\n  subMenuInit() {\r\n    this.sidenavLinks = Array.from(this.menu.nativeElement.children);\r\n\r\n    this.sidenavLinks.forEach((li) => {\r\n      li.onclick = () => {\r\n        this.sidenavLinks.forEach((item) => item.classList.remove('active'));\r\n        li.classList.toggle('active');\r\n      };\r\n      // console.log(li);\r\n      // console.log(li.children[li.children.length - 1]);\r\n    });\r\n  }\r\n\r\n  fixedNavTop() {\r\n    this.container.nativeElement.onscroll = () => {\r\n      if (this.container.nativeElement.scrollTop === 0) {\r\n        this.scrolled = false;\r\n      } else {\r\n        this.scrolled = true;\r\n      }\r\n    };\r\n  }\r\n\r\n  scrollToTop() {\r\n    this.container.nativeElement.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<app-general-loading *ngIf=\"showLoader\"></app-general-loading>\r\n\r\n<section class=\"layout container-fluid p-0\">\r\n  <nav class=\"side-nav\" (click)=\"openNav()\" [class.collapsed]=\"closedNav\">\r\n    <div class=\"overlay\">\r\n      <div class=\"logo\" (click)=\"navigateToDashboard()\">\r\n        <a href=\"\">\r\n          <app-svg-logo></app-svg-logo>\r\n          <span>sender</span>\r\n        </a>\r\n      </div>\r\n      <div class=\"user\" (click)=\"toggleUserMenu()\">\r\n        <div class=\"img\" [class.active]=\"openUserMenu\">\r\n          <img class=\"user-img\" src=\"../../../assets/images/user.png\" alt=\"\" />\r\n          <span class=\"user-name\">{{ loggedUser.fullname }}</span>\r\n        </div>\r\n        <ul #userMenu [class.open]=\"openUserMenu\">\r\n          <li class=\"user-menu-item\" [routerLink]=\"['profile']\">\r\n            <i class=\"fal fa-user-alt\"></i>\r\n            <a href=\"\">{{'dashboard.profile' | translate}}</a>\r\n          </li>\r\n          <li (click)=\"logout()\" class=\"user-menu-item danger\">\r\n            <i class=\"fal fa-power-off\"></i>\r\n            <a href=\"\">{{'dashboard.logout' | translate}}</a>\r\n\r\n          </li>\r\n          <!-- <li class=\"user1-menu-item\" [routerLink]=\"['users']\">\r\n            <i class=\"fal fa-user1-friends\"></i>\r\n            <a href=\"\">users</a>\r\n          </li> -->\r\n        </ul>\r\n      </div>\r\n      <div class=\"menu\" [class.responsive]=\"openUserMenu\">\r\n        <ul #menu class=\"primary-menu\">\r\n          <li class=\"primary-link active\">\r\n            <div class=\"link-element\" [routerLink]=\"['./']\">\r\n              <div class=\"icon\">\r\n                <i class=\"fad fa-th-large\"></i>\r\n              </div>\r\n              <a href=\"\">{{'dashboard.dashboard' | translate}}</a>\r\n\r\n            </div>\r\n          </li>\r\n\r\n          <!-- <li class=\"primary-link\">\r\n            <div class=\"link-element dropper\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-cog\"></i>\r\n              </div>\r\n              <a href=\"\">settings</a>\r\n            </div>\r\n            <ul class=\"sub-menu\">\r\n              <li class=\"sub-links\" [routerLink]=\"['./admins']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fas fa-user-tie\"></i>\r\n                </div>\r\n                <a href=\"\">admins</a>\r\n              </li>\r\n              <li class=\"sub-links\" [routerLink]=\"['configurations']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fal fa-cog\"></i>\r\n                </div>\r\n                <a href=\"\">configurations</a>\r\n              </li>\r\n              <li class=\"sub-links\" [routerLink]=\"['country-price']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fad fa-funnel-dollar\"></i>\r\n                </div>\r\n                <a href=\"\">Country Price</a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li class=\"primary-link\">\r\n            <div class=\"link-element dropper\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-user-headset\"></i>\r\n              </div>\r\n              <a href=\"\">Supports</a>\r\n            </div>\r\n            <ul class=\"sub-menu\">\r\n              <li class=\"sub-links\" [routerLink]=\"['customer-support']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fas fa-user-headset\"></i>\r\n                </div>\r\n                <a href=\"\">customer support</a>\r\n              </li>\r\n              <li class=\"sub-links\" [routerLink]=\"['supports']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fas fa-users\"></i>\r\n                </div>\r\n                <a href=\"\">all Supports</a>\r\n              </li>\r\n            </ul>\r\n          </li> -->\r\n\r\n          <li class=\"primary-link\">\r\n            <div class=\"link-element dropper\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-people-carry\"></i>\r\n              </div>\r\n              <a href=\"\">{{'dashboard.orders' | translate}}</a>\r\n            </div>\r\n            <ul class=\"sub-menu\">\r\n              <li class=\"sub-links\" [routerLink]=\"['new-order']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fas fa-box-open\"></i>\r\n                </div>\r\n                <a href=\"\">{{'dashboard.newOrder' | translate}}</a>\r\n\r\n              </li>\r\n              <li class=\"sub-links\" [routerLink]=\"['orders']\">\r\n                <div class=\"icon\">\r\n                  <i class=\"fas fa-people-carry\"></i>\r\n                </div>\r\n                <a href=\"\">{{'dashboard.allOrders' | translate}}</a>\r\n\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <div class=\"dashboard\" [class.collapsed-sidenav]=\"closedNav\">\r\n    <nav [class.scrolled]=\"scrolled\" class=\"top-nav\">\r\n      <div class=\"left-nav\">\r\n        <button class=\"menu-toggler\" (click)=\"toggleNav()\">\r\n          <i class=\"far fa-ellipsis-v\" [hidden]=\"closedNav\"></i>\r\n          <i class=\"far fa-list-ul\" [hidden]=\"!closedNav\"></i>\r\n        </button>\r\n        <span [class.d-none]=\"hideTitle\">{{ currentPage }}</span>\r\n      </div>\r\n      <div class=\"right-nav\">\r\n        <ul class=\"icons\">\r\n          <div class=\"lang-container\">\r\n            <div class=\"current-lang\" (click)=\"toggleLang()\">\r\n              <img [src]=\"currentFlag\" alt=\"\" />\r\n              <span>{{ currentLang === 'ar' ? 'العربية' : 'english' }}</span>\r\n            </div>\r\n            <ul [class.open]=\"showLangMenu\">\r\n              <li id=\"en\" (click)=\"changeLang($event); toggleLang()\">\r\n                <img src=\"../../../../assets/images/en.jpg\" alt=\"\" />\r\n                <span>english</span>\r\n              </li>\r\n              <li id=\"ar\" (click)=\"changeLang($event); toggleLang()\">\r\n                <img src=\"../../../../assets/images/ar.jpg\" alt=\"\" />\r\n                <span>العربية</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n<!--          <li class=\"icon\">-->\r\n<!--            <i (click)=\"toggleNotification($event)\" class=\"fas fa-comment\"></i>-->\r\n<!--            <span class=\"badge rounded-circle badge-primary\">4</span>-->\r\n<!--            <ul class=\"icon-menu\">-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">Mike John responded to your email</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">You have 5 new tasks</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">You're now friend with Andrew</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">Another Notification</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">Another One</a>-->\r\n<!--              </li>-->\r\n<!--            </ul>-->\r\n<!--          </li>-->\r\n<!--          <li class=\"icon\">-->\r\n<!--            <i (click)=\"toggleNotification($event)\" class=\"fas fa-bell\"></i>-->\r\n<!--            <span class=\"badge rounded-circle badge-primary\" hidden>4</span>-->\r\n<!--            <ul class=\"icon-menu\">-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">Mike John responded to your email</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">You have 5 new tasks</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">You're now friend with Andrew</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">Another Notification</a>-->\r\n<!--              </li>-->\r\n<!--              <li class=\"link\">-->\r\n<!--                <a href=\"\">Another One</a>-->\r\n<!--              </li>-->\r\n<!--            </ul>-->\r\n<!--          </li>-->\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    <div #container class=\"container-fluid content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\n\r\nimport { ChartsComponent } from './pages/charts/charts.component';\r\nimport { SupportDashboardComponent } from './dashboard.component';\r\nimport { UserComponent } from './pages/user/user.component';\r\nimport { AdminsComponent } from './pages/admins/admins.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SupportDashboardComponent,\r\n    ChartsComponent,\r\n    UserComponent,\r\n    AdminsComponent,\r\n  ],\r\n  imports: [CommonModule, DashboardRoutingModule, SharedModule],\r\n  providers: [],\r\n})\r\nexport class DashboardModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport {\r\n  AdminsPaginationResult, AdminUser,\r\n  DriversPaginationResult,\r\n  Pagination, SupportsPaginationResult, SupportUser, User,\r\n} from '../../../../@core/models/data-objects';\r\n\r\nconst options = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  }),\r\n  // observe: 'response'\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getUsers(\r\n    pagination: Pagination\r\n  ): Observable<AdminsPaginationResult> {\r\n    return this.httpClient\r\n      .post('admin/users', pagination, options)\r\n      .pipe(\r\n        map((data: AdminsPaginationResult) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public getUser(id:number\r\n  ): Observable<User> {\r\n    return this.httpClient\r\n      .get('admin/users/'+id.toString(), options)\r\n      .pipe(\r\n        map((data: User) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public addAdmin(\r\n    adminUser: AdminUser\r\n  ): Observable<string> {\r\n    return this.httpClient\r\n      .post('admin', adminUser, options)\r\n      .pipe(\r\n        map((data: string) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public updateAdmin(\r\n    adminUser: AdminUser\r\n  ): Observable<boolean> {\r\n    return this.httpClient\r\n      .put('admin', adminUser, options)\r\n      .pipe(\r\n        map((data: boolean) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatRow } from '@angular/material/table';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport {\r\n  AdminUser,\r\n  SupportUser,\r\n  SupportUserAccount,\r\n  UserAccount,\r\n} from '../../../../@core/models/data-objects';\r\nimport { AuthService } from '../../../../@core/services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AdminService } from './admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admins',\r\n  templateUrl: './admins.component.html',\r\n  styleUrls: ['./admins.component.scss'],\r\n})\r\nexport class AdminsComponent implements OnInit {\r\n  isLoading = false;\r\n  displayedColumns: string[] = [\r\n    // 'id',\r\n    'avatar',\r\n    'fullName',\r\n    'mobile',\r\n  ];\r\n  dataSource: MatTableDataSource<AdminUser>;\r\n  total = 0;\r\n  page = 1;\r\n  perPage = 5;\r\n\r\n  baseURL = '';\r\n  assetsPath = '/Assets/Images/Admins/';\r\n  personalPhotosPath = 'PersonalPhotos';\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLoading = true;\r\n    this.baseURL = this.authService.getBaseURL();\r\n    this.getAdminUsers(this.page, this.perPage);\r\n  }\r\n\r\n  getAdminUsers(page: number, perPage: number) {\r\n    this.adminService\r\n      .getUsers({ page, numberOfObjectsPerPage: perPage })\r\n      .subscribe((data) => {\r\n        this.dataSource = new MatTableDataSource<AdminUser>(data.users);\r\n        this.total = data.total;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onPageChanges(e: PageEvent) {\r\n    this.isLoading = true;\r\n    this.page = e.pageIndex + 1;\r\n    this.perPage = e.pageSize;\r\n    this.getAdminUsers(this.page, this.perPage);\r\n  }\r\n\r\n  routeUser(id: number) {\r\n    console.log(id);\r\n    this.router.navigate(['dashboard/user', id, 'admin']);\r\n  }\r\n\r\n  newAdmin() {\r\n    this.router.navigate(['dashboard/user', 0, 'admin']);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header bg-white py-0\">\r\n    <div class=\"mat-card-header\">\r\n      <i class=\"fas fa-user-check bg-danger\"></i>\r\n      <span class=\"text-capitalize mx-3\">Admins</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body mat-card-body\">\r\n    <div class=\"tabs\">\r\n      <button\r\n        (click)=\"newAdmin()\"\r\n        class=\"btn btn-sm btn-info mx-1 mt-1 text-capitalize\"\r\n      >\r\n        Add new Admin\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"table-responsive\">\r\n      <!-- <div *ngIf=\"isLoading\" class=\"overlay\">\r\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n      </div> -->\r\n      <div class=\"table-container\">\r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n          <!-- id Column -->\r\n          <ng-container matColumnDef=\"id\">\r\n            <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- avatar Column -->\r\n          <ng-container matColumnDef=\"avatar\">\r\n            <mat-header-cell *matHeaderCellDef> Photo </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <img\r\n                [src]=\"\r\n                  baseURL +\r\n                  assetsPath +\r\n                  element.id +\r\n                  '/' +\r\n                  personalPhotosPath +\r\n                  '/' +\r\n                  element.image\r\n                \"\r\n                alt=\"\"\r\n              />\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- first_name Column -->\r\n          <ng-container matColumnDef=\"fullName\">\r\n            <mat-header-cell *matHeaderCellDef> Full name </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              {{ element.fullname }}\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- email Column -->\r\n          <ng-container matColumnDef=\"mobile\">\r\n            <mat-header-cell *matHeaderCellDef> Mobile </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              {{ element.mobile }}\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- last_name Column -->\r\n          <!--          <ng-container matColumnDef=\"last_name\">-->\r\n          <!--            <mat-header-cell *matHeaderCellDef> last name </mat-header-cell>-->\r\n          <!--            <mat-cell *matCellDef=\"let element\">-->\r\n          <!--              {{ element.last_name }}-->\r\n          <!--            </mat-cell>-->\r\n          <!--          </ng-container>-->\r\n\r\n          <mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n          ></mat-header-row>\r\n          <mat-row\r\n            (click)=\"routeUser(row.id)\"\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n          ></mat-row>\r\n        </mat-table>\r\n      </div>\r\n    </div>\r\n    <mat-paginator\r\n      [length]=\"total\"\r\n      [pageSize]=\"perPage\"\r\n      [pageSizeOptions]=\"[5, 10]\"\r\n      (page)=\"onPageChanges($event)\"\r\n    ></mat-paginator>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  templateUrl: './charts.component.html',\r\n  styleUrls: ['./charts.component.scss'],\r\n})\r\nexport class ChartsComponent implements OnInit {\r\n  chartType: ChartType = 'pie';\r\n  chartValues: number[] = [300, 500, 200];\r\n  chartLabels: Label[] = [['Download'], ['Sales', 'Mail Sales'], 'Mail Sales'];\r\n  chartLegendVisibility = true;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 col-md-6 col-lg-6 col-xl-4 my-4\">\r\n    <app-statistics\r\n      header=\"total profit\"\r\n      headerIconClass=\"fas fa-dollar-sign\"\r\n      headerColorClass=\"bg-success\"\r\n      value=\"$30000\"\r\n      valueColorClass=\"text-success\"\r\n      messageIconClass=\"fal fa-cloud-upload\"\r\n      messageIconColorClass=\"text-success\"\r\n      message=\"last 24 hours\"\r\n    ></app-statistics>\r\n  </div>\r\n  <div class=\"col-12 col-md-6 col-lg-6 col-xl-4 my-4\">\r\n    <app-statistics\r\n      header=\"total loss\"\r\n      headerIconClass=\"fas fa-dollar-sign\"\r\n      headerColorClass=\"bg-rose\"\r\n      value=\"$10000\"\r\n      valueColorClass=\"text-danger\"\r\n      messageIconClass=\"fal fa-exclamation-circle\"\r\n      messageIconColorClass=\"text-danger\"\r\n      message=\"last 72 hours\"\r\n    ></app-statistics>\r\n  </div>\r\n  <div class=\"col-12 col-md-6 col-lg-6 col-xl-4 my-4\">\r\n    <app-statistics\r\n      header=\"arrived orders\"\r\n      headerIconClass=\"fas fa-tachometer-alt\"\r\n      headerColorClass=\"bg-info\"\r\n      value=\"43%\"\r\n      valueColorClass=\"text-info\"\r\n      messageIconClass=\"fal fa-cloud-upload\"\r\n      messageIconColorClass=\"text-info\"\r\n      message=\"last 24 hours\"\r\n    ></app-statistics>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n  <div class=\"col-12 col-lg-6\">\r\n    <app-pie-chart\r\n      [chartValues]=\"chartValues\"\r\n      [chartLabels]=\"chartLabels\"\r\n      iconBgColor=\"bg-danger\"\r\n      miniMessage=\"last 24 hours\"\r\n      messageIconClass=\"fal fa-cloud-upload\"\r\n    ></app-pie-chart>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { AuthService } from '../../../../@core/services/auth/auth.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport {\r\n  AdminUser,\r\n  AgentUser,\r\n  BoxType,\r\n  City,\r\n  Country,\r\n  DriverUser,\r\n  StatusAction,\r\n  StatusTypes,\r\n  SupportUser,\r\n  SupportUserAccount,\r\n  User,\r\n  UserBox,\r\n  UserVehicle,\r\n  Vehicle,\r\n} from '../../../../@core/models/data-objects';\r\nimport { Observable } from 'rxjs';\r\nimport { SystemService } from '../../../../@core/services/system/system.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { AdminService } from '../admins/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  userId: number;\r\n  userType: string;\r\n  userData: User;\r\n  userVehicle: UserVehicle;\r\n  userBox: UserBox;\r\n  isReviewing: boolean = false;\r\n  countries$: Observable<Country[]>;\r\n  cities$: Observable<City[]>;\r\n  residenceCountries$: Observable<Country[]>;\r\n  residenceCities$: Observable<City[]>;\r\n  vehicles$: Observable<Vehicle[]>;\r\n  boxTypes$: Observable<BoxType[]>;\r\n  baseURL: string;\r\n  supportPath = 'Supports';\r\n  adminPath = 'Admins';\r\n  folderPersonalPhotosPath = 'PersonalPhotos';\r\n  modalRef: BsModalRef;\r\n  formData: FormData;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private systemService: SystemService,\r\n    private userService: UserService,\r\n    private adminService: AdminService,\r\n    private route: ActivatedRoute,\r\n    private modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params) => {\r\n      this.userId = Number.parseInt(params['id']);\r\n      this.userType = params['type'];\r\n      console.log(this.userType + '    ' + this.userId);\r\n    });\r\n\r\n    this.baseURL = this.authService.getBaseURL();\r\n    //this.userData = this.authService.getLoggedUser().supportUser;\r\n    this.loadCountries();\r\n\r\n    //console.log(this.userData);\r\n\r\n    if (this.userType != null && this.userType.toLowerCase() === 'driver') {\r\n      this.userData = new DriverUser();\r\n      if (this.userId == 0) return;\r\n\r\n      this.loadDriverUserData(this.userId);\r\n    } else if (\r\n      this.userType != null &&\r\n      this.userType.toLowerCase() === 'admin'\r\n    ) {\r\n      this.userData = new AdminUser();\r\n      if (this.userId == 0) return;\r\n\r\n      this.loadAdminUserData(this.userId);\r\n    } else if (\r\n      this.userType != null &&\r\n      this.userType.toLowerCase() === 'agent'\r\n    ) {\r\n      this.userData = new AgentUser();\r\n      if (this.userId == 0) return;\r\n    }\r\n  }\r\n\r\n  showVehicleDetails(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(\r\n      template,\r\n      Object.assign({}, { class: 'gray modal-lg' })\r\n    );\r\n  }\r\n\r\n  loadDriverUserData(id: number) {\r\n    this.userService.getDriverUserData(id).subscribe((data) => {\r\n      this.userData = data;\r\n      if (this.userData.currentStatusId == StatusTypes.Reviewing)\r\n        this.isReviewing = true;\r\n\r\n      if (this.userData.userVehicles.length > 0)\r\n        this.userVehicle = this.userData.userVehicles[0];\r\n\r\n      if (this.userVehicle?.userBoxes.length > 0)\r\n        this.userBox = this.userVehicle?.userBoxes[0];\r\n\r\n      console.log(this.userData);\r\n      this.loadCities(this.userData.countryId);\r\n      this.loadResidenceCities(this.userData.residenceCountryId);\r\n      this.loadVehicles();\r\n      this.loadBoxTypes();\r\n    });\r\n  }\r\n\r\n  loadAdminUserData(id: number) {\r\n    this.adminService.getUser(id).subscribe((data) => {\r\n      this.userData = data;\r\n\r\n      console.log(this.userData);\r\n      this.loadCities(this.userData.countryId);\r\n      this.loadResidenceCities(this.userData.residenceCountryId);\r\n    });\r\n  }\r\n\r\n  loadVehicles() {\r\n    this.vehicles$ = this.systemService.getVehicles();\r\n  }\r\n\r\n  loadBoxTypes() {\r\n    this.boxTypes$ = this.systemService.getBoxTypes();\r\n  }\r\n\r\n  loadCountries() {\r\n    this.countries$ = this.residenceCountries$ = this.systemService.getCountries();\r\n  }\r\n\r\n  loadResidenceCities(countryId: number): void {\r\n    this.residenceCities$ = this.systemService.getCities(countryId);\r\n  }\r\n\r\n  loadCities(countryId: number): void {\r\n    this.cities$ = this.systemService.getCities(countryId);\r\n  }\r\n\r\n  birthCountryChange(event): void {\r\n    this.loadCities(event.target.value);\r\n  }\r\n\r\n  residenceCountryChange(event): void {\r\n    this.loadResidenceCities(event.target.value);\r\n  }\r\n\r\n  vehicleDetails() {}\r\n\r\n  acceptProfile() {\r\n    // let statusAction : StatusAction = new StatusAction();\r\n    // statusAction.userType = this.userType;\r\n    // statusAction.userId = this.userId;\r\n    // statusAction.statusTypeId = StatusTypes.Working;\r\n    //\r\n    // this.systemService.changeUserStatus(statusAction).subscribe((data) => {\r\n    //\r\n    // });\r\n  }\r\n\r\n  save() {\r\n    if (this.userType.toLowerCase() === 'driver') this.saveDriverData();\r\n    else if (this.userType.toLowerCase() === 'admin') this.saveAdminData();\r\n  }\r\n\r\n  saveAdminData() {\r\n    console.log(this.userData);\r\n\r\n    if (this.userId > 0) {\r\n      this.adminService.updateAdmin(this.userData).subscribe((result) => {\r\n        if (result == true) {\r\n          //show message success\r\n        }\r\n      });\r\n    } else if (this.userId === 0) {\r\n      this.adminService.addAdmin(this.userData).subscribe((result) => {\r\n        //show message with generated password\r\n      });\r\n    }\r\n  }\r\n\r\n  saveDriverData() {\r\n    this.prepareImagesData();\r\n    console.log(this.userData);\r\n\r\n    if (this.userId > 0) {\r\n      this.userService.updateDriver(this.userData).subscribe((data) => {\r\n        if (data == true) {\r\n          this.userService\r\n            .submitDriverPictures(this.formData)\r\n            .subscribe((data) => {\r\n              // adding message success\r\n            });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  saveVehicleDetails() {\r\n    this.userVehicle.userBoxes = new Array<UserBox>();\r\n    this.userData.userVehicles = new Array<UserVehicle>();\r\n    this.userVehicle.userBoxes.push(this.userBox);\r\n    this.userData.userVehicles.push(this.userVehicle);\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  prepareImagesData() {\r\n    this.formData = new FormData();\r\n    let blob: Blob = new Blob();\r\n\r\n    this.formData.append('UserID', blob, this.userId.toString());\r\n\r\n    this.formData.append(\r\n      'PersonalPhotos',\r\n      this.userData.personalPhotoFile,\r\n      this.userData.personalPhotoFile.name\r\n    );\r\n    this.formData.append(\r\n      'NationalNumberPhotos',\r\n      this.userData.nationalNumberPhotoFile,\r\n      this.userData.nationalNumberPhotoFile.name\r\n    );\r\n    this.formData.append(\r\n      'VehicleLicensePhotos',\r\n      this.userVehicle.licenseImageFile,\r\n      this.userVehicle.licenseImageFile.name\r\n    );\r\n    this.formData.append(\r\n      'VehiclesPhotos',\r\n      this.userVehicle.vehicleImageFile,\r\n      this.userVehicle.vehicleImageFile.name\r\n    );\r\n  }\r\n\r\n  stopUserChange(event) {\r\n    let statusAction: StatusAction = new StatusAction();\r\n    statusAction.userType = this.userType;\r\n    statusAction.userId = this.userId;\r\n    if (event.target.checked == true)\r\n      statusAction.statusTypeId = StatusTypes.Stopped;\r\n    else statusAction.statusTypeId = StatusTypes.Working;\r\n\r\n    this.systemService.changeUserStatus(statusAction).subscribe((data) => {});\r\n  }\r\n\r\n  suspendUserChange(event) {\r\n    let statusAction: StatusAction = new StatusAction();\r\n    statusAction.userType = this.userType;\r\n    statusAction.userId = this.userId;\r\n    if (event.target.checked == true)\r\n      statusAction.statusTypeId = StatusTypes.Suspended;\r\n    else statusAction.statusTypeId = StatusTypes.Working;\r\n\r\n    this.systemService.changeUserStatus(statusAction).subscribe((data) => {});\r\n  }\r\n\r\n  onVehiclePictureChange(event) {\r\n    if (\r\n      !event ||\r\n      !event.target ||\r\n      !event.target.files ||\r\n      event.target.files.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const file: File = event.target.files[0];\r\n    const extension = file.type.split('/')[1];\r\n    const uniqueNumber = Math.floor(new Date().valueOf() * Math.random());\r\n    // let uniqueNumber =(new Date().getTime()).toString(20);\r\n    const fileName: string = 'VP_' + uniqueNumber + '.' + extension;\r\n    this.userVehicle.vehicleImageName = fileName;\r\n    this.userVehicle.vehicleImageFile = new File([file], fileName, {\r\n      type: file.type,\r\n    });\r\n\r\n    console.log(this.userVehicle.vehicleImageName);\r\n  }\r\n\r\n  onLicensePictureChange(event) {\r\n    if (\r\n      !event ||\r\n      !event.target ||\r\n      !event.target.files ||\r\n      event.target.files.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const file: File = event.target.files[0];\r\n    const extension = file.type.split('/')[1];\r\n    const uniqueNumber = Math.floor(new Date().valueOf() * Math.random());\r\n    // let uniqueNumber =(new Date().getTime()).toString(20);\r\n    const fileName: string = 'LP_' + uniqueNumber + '.' + extension;\r\n    this.userVehicle.licenseImageName = fileName;\r\n    this.userVehicle.licenseImageFile = new File([file], fileName, {\r\n      type: file.type,\r\n    });\r\n\r\n    console.log(this.userVehicle.licenseImageName);\r\n  }\r\n\r\n  onNationalNumberPhotoChange(event) {\r\n    if (\r\n      !event ||\r\n      !event.target ||\r\n      !event.target.files ||\r\n      event.target.files.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const file: File = event.target.files[0];\r\n    const extension = file.type.split('/')[1];\r\n    const uniqueNumber = Math.floor(new Date().valueOf() * Math.random());\r\n    // let uniqueNumber =(new Date().getTime()).toString(20);\r\n    const fileName: string = 'NNP_' + uniqueNumber + '.' + extension;\r\n    this.userData.nationalNumberImageName = fileName;\r\n    this.userData.nationalNumberPhotoFile = new File([file], fileName, {\r\n      type: file.type,\r\n    });\r\n\r\n    console.log(this.userData.nationalNumberImageName);\r\n  }\r\n\r\n  onPersonalPhotoChange(event) {\r\n    if (\r\n      !event ||\r\n      !event.target ||\r\n      !event.target.files ||\r\n      event.target.files.length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const file: File = event.target.files[0];\r\n    const extension = file.type.split('/')[1];\r\n    const uniqueNumber = Math.floor(new Date().valueOf() * Math.random());\r\n    // let uniqueNumber =(new Date().getTime()).toString(20);\r\n    const fileName: string = 'PP_' + uniqueNumber + '.' + extension;\r\n    this.userData.personalImageName = fileName;\r\n    this.userData.personalPhotoFile = new File([file], fileName, {\r\n      type: file.type,\r\n    });\r\n\r\n    console.log(this.userData.nationalNumberImageName);\r\n  }\r\n\r\n  openFileInput(e: Event) {\r\n    const input = e.target as HTMLInputElement;\r\n    const fileInput = input.nextElementSibling as HTMLInputElement;\r\n    fileInput.click();\r\n    const controlName = fileInput.getAttribute('name');\r\n\r\n    fileInput.addEventListener('change', (e) => {\r\n      const inputt = e.target as HTMLInputElement;\r\n      const file = inputt.files[0] as File;\r\n      const fileName = file.name;\r\n      input.value = fileName;\r\n      input.blur();\r\n    });\r\n  }\r\n}\r\n","<div class=\"py-4\">\r\n  <div class=\"row\">\r\n    <div class=\"my-2 col-xl-8 col-md-7\">\r\n      <div class=\"card\">\r\n        <div\r\n          class=\"card-header card-header-shadow gradient-info text-white border-0 inside-card\"\r\n        >\r\n          <h2 class=\"font-weight-normal mb-1 text-capitalize\">profile</h2>\r\n          <p class=\"card-text mb-1\"></p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form class=\"row\">\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">email </label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                name=\"email\"\r\n                [(ngModel)]=\"userData.email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">{{ (userType != 'agent' )?  'full' : ''}} name</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"fullname\"\r\n                [(ngModel)]=\"userData.fullname\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">{{ (userType != 'agent' )?  'Birth' : ''}}  Country</label>\r\n              <select class=\"form-control\" name=\"birthCountry\"\r\n                      [(ngModel)]=\"userData.countryId\"\r\n                      (change)=\"birthCountryChange($event)\">\r\n                <option *ngFor=\"let country of countries$ | async\" [value]=\"country.id\">{{country.name}}</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">{{ (userType != 'agent' )?  'Birth' : ''}} City</label>\r\n              <select\r\n                class=\"form-control\"\r\n                name=\"birthCity\"\r\n                [(ngModel)]=\"userData.cityId\">\r\n                <option *ngFor=\"let city of cities$ | async\" [value]=\"city.id\">{{city.name}}</option>\r\n              </select>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div *ngIf=\"userType != 'agent'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">birth date</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"birthdate\"\r\n                [(ngModel)]=\" userData.birthDay + '/'+ userData.birthMonth + '/'+ userData.birthYear\"\r\n              />\r\n            </div>\r\n            <div *ngIf=\"userType != 'agent'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">gander</label>\r\n              <select\r\n                class=\"form-control\"\r\n                name=\"gender\"\r\n                [(ngModel)]=\"userData.gender\"\r\n              >\r\n                <option value=\"Male\" >male</option>\r\n                <option value=\"Female\">female</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">mobile</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"mobile\"\r\n                [(ngModel)]=\"userData.mobile\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <div *ngIf=\"userType != 'agent'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Residence Country</label>\r\n              <select class=\"form-control\" name=\"residenceCountry\"\r\n                      [(ngModel)]=\"userData.residenceCountryId\"\r\n                      (change)=\"residenceCountryChange($event)\">\r\n                <option *ngFor=\"let country of residenceCountries$ | async\" [value]=\"country.id\">{{country.name}}</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div *ngIf=\"userType != 'agent'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Residence City</label>\r\n              <select\r\n                class=\"form-control\"\r\n                name=\"residenceCity\"\r\n\r\n                [(ngModel)]=\"userData.residenceCityId\">\r\n                <option *ngFor=\"let city of residenceCities$ | async\" [value]=\"city.id\">{{city.name}}</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div *ngIf=\"userType != 'agent'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">Residence Expire</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"residenceExpire\"\r\n                [(ngModel)]=\"   userData.residenceExpireDay + '/'+ userData.residenceExpireMonth + '/'+ userData.residenceExpireYear\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">address</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"address\"\r\n                [(ngModel)]=\"userData.address\"\r\n              />\r\n            </div>\r\n\r\n            <div *ngIf=\"userType != 'agent'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">National Number</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"nationalNumber\"\r\n                [(ngModel)]=\"userData.nationalNumber\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <div *ngIf=\"userType == 'driver'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <label class=\"text-capitalize\">National Number Photo</label>\r\n              <input type=\"text\" (click)=\"openFileInput($event)\" />\r\n              <input\r\n                type=\"file\"\r\n                class=\"form-control\"\r\n                name=\"nationalNumberPhoto\"\r\n                [(ngModel)]=\"userData.nationalNumberImageName\"\r\n                (change)=\"onNationalNumberPhotoChange($event)\"\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n<!--            <div class=\"form-group col-xl-6 col-md-12\">-->\r\n<!--              <label class=\"text-capitalize\">image</label>-->\r\n<!--              <input-->\r\n<!--                type=\"file\"-->\r\n<!--                class=\"form-control\"-->\r\n<!--                name=\"image\"-->\r\n<!--                [(ngModel)]=\"userData.image\"-->\r\n<!--              />-->\r\n<!--            </div>-->\r\n\r\n\r\n            <div *ngIf=\"userType == 'driver'\" class=\"form-group col-xl-6 col-md-12\">\r\n              <button (click)=\"showVehicleDetails(vehicleDetails)\" class=\"btn btn-warning text-capitalize\">\r\n                Vehicle Details\r\n              </button>\r\n            </div>\r\n\r\n            <div *ngIf=\"isReviewing == false\">\r\n              <div class=\"form-group col-md-12 my-3\">\r\n                <div class=\"form-check-for-android\">\r\n                  <input\r\n                    class=\"form-check-android\"\r\n                    type=\"checkbox\"\r\n                    id=\"stopUser\"\r\n                    (change)=\"stopUserChange($event)\"\r\n                  />\r\n                  <label class=\"form-check-android-label\" for=\"stopUser\"></label>\r\n                  <label for=\"stopUser\" class=\"mx-3\">User Stopped</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group col-md-12 my-3\">\r\n                <div class=\"form-check-for-android\">\r\n                  <input\r\n                    class=\"form-check-android\"\r\n                    type=\"checkbox\"\r\n                    id=\"suspendUser\"\r\n                    (change)=\"suspendUserChange($event)\"\r\n                  />\r\n                  <label class=\"form-check-android-label\" for=\"suspendUser\"></label>\r\n                  <label for=\"suspendUser\" class=\"mx-3\">User Suspended</label>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div *ngIf=\"isReviewing\" class=\"col-md-12 d-flex justify-content-center\">\r\n              <button (click)=\"acceptProfile()\" class=\"btn btn-success text-capitalize\">\r\n                Accept Profile\r\n              </button>\r\n            </div>\r\n\r\n            <div *ngIf=\"isReviewing == false\"  class=\"col-md-12 d-flex justify-content-center\">\r\n              <button (click)=\"save()\" class=\"btn btn-info text-capitalize\">\r\n                Save\r\n              </button>\r\n            </div>\r\n\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #vehicleDetails>\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">Vehicle Details</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form class=\"row\">\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">License Number </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              name=\"licenseNumber\"\r\n              [(ngModel)]=\"userVehicle.licenseNumber\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">License Picture </label>\r\n            <input type=\"text\" (click)=\"openFileInput($event)\" />\r\n            <input\r\n              type=\"file\"\r\n              class=\"form-control\"\r\n              name=\"licensePicture\"\r\n              [(ngModel)]=\"userVehicle.licenseImageName\"\r\n              (change)=\"onLicensePictureChange($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">Vehicle Type</label>\r\n            <select class=\"form-control\" name=\"vehicleType\"\r\n                    [(ngModel)]=\"userVehicle.vehicleId\">\r\n              <option *ngFor=\"let vehicles of vehicles$ | async\" [value]=\"vehicles.id\">{{vehicles.type}}</option>\r\n            </select>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">Vehicle Model </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              name=\"vehicleModel\"\r\n              [(ngModel)]=\"userVehicle.model\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">Plate Number </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              name=\"plateNumber\"\r\n              [(ngModel)]=\"userVehicle.plateNumber\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">Vehicle Picture </label>\r\n            <input type=\"text\" (click)=\"openFileInput($event)\" />\r\n            <input\r\n              type=\"file\"\r\n              class=\"form-control\"\r\n              name=\"vehiclePicture\"\r\n              [(ngModel)]=\"userVehicle.vehicleImageName\"\r\n              (change)=\"onVehiclePictureChange($event)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group col-xl-6 col-md-12\">\r\n            <label class=\"text-capitalize\">box Type</label>\r\n            <select class=\"form-control\" name=\"boxType\"\r\n                    [(ngModel)]=\"userBox.boxTypeId\">\r\n              <option *ngFor=\"let boxType of boxTypes$ | async\" [value]=\"boxType.id\">{{boxType.type}}</option>\r\n            </select>\r\n          </div>\r\n\r\n        </form>\r\n        </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"saveVehicleDetails()\">Save</button>\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">Close</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n\r\n\r\n<!--    <jw-modal id=\"custom-modal-1\">-->\r\n<!--      <h1>A Custom Modal!</h1>-->\r\n<!--      <p>Home page text: <input type=\"text\" [(ngModel)]=\"bodyText\" /></p>-->\r\n<!--      <button (click)=\"closeModal('custom-modal-1');\">Close</button>-->\r\n<!--    </jw-modal>-->\r\n\r\n\r\n    <div class=\"my-2 col-xl-4 col-md-5\">\r\n      <div class=\"card\">\r\n        <!--        <div *ngIf=\"userData.image != null && userData.image !==''  \" class=\"card-header border-0 p-0 overflow-hidden img-cover\">-->\r\n        <!--          <img-->\r\n        <!--            class=\"w-100\"-->\r\n        <!--            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSsXNtvm-pA4lpALltVkyWmOUlTDIfACJjnlA&usqp=CAU\"-->\r\n        <!--            alt=\"\"-->\r\n        <!--          />-->\r\n        <!--        </div>-->\r\n        <div *ngIf=\"userData.personalImageName == null || userData.personalImageName ===''  \" class=\"avatar\">\r\n          <img\r\n            src=\"https://ncbae.edu.pk/alhamra_new/wp-content/uploads/2016/08/person-2-200x200.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div *ngIf=\"userData.personalImageName != null && userData.personalImageName !==''  \" class=\"avatar\">\r\n          <img\r\n            [src]=\"baseURL+\r\n            '/' +\r\n             supportPath +\r\n             '/' +\r\n             userData.id +\r\n             '/'+\r\n             folderPersonalPhotosPath +\r\n             '/' + userData.personalImageName\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title text-center\">{{ userData.fullname }}</h2>\r\n          <div class=\"data my-3\">\r\n            <div class=\"part my-2\">\r\n              <i class=\"far fa-at\"></i>\r\n              {{ userData.email }}\r\n            </div>\r\n            <div class=\"part my-2\">\r\n              <i class=\"fas fa-map-marker-alt\"></i>\r\n              {{\r\n              userData.address\r\n                ? userData.address\r\n                : 'none'\r\n              }}\r\n            </div>\r\n            <div *ngIf=\"userType != 'agent'\" class=\"part my-2\">\r\n              <i class=\"fal fa-birthday-cake\"></i>\r\n              {{\r\n              userData.birthYear\r\n                ? userData.birthDay +'/'+ userData.birthMonth + '/'+userData.birthYear\r\n                : 'none'\r\n              }}\r\n            </div>\r\n            <div class=\"part my-2\">\r\n              <i class=\"fas fa-phone-alt\"></i>\r\n              {{\r\n              userData.mobile\r\n                ? userData.mobile\r\n                : 'null'\r\n              }}\r\n            </div>\r\n            <div class=\"text-center\">\r\n              <button\r\n                class=\"btn btn-default text-white text-capitalize\"\r\n                [routerLink]=\"['../']\"\r\n              >\r\n                back\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport {\r\n  DriversPaginationResult, DriverUser,\r\n  Pagination, StatusAction, User,\r\n} from '../../../../@core/models/data-objects';\r\n\r\nconst options = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  }),\r\n  // observe: 'response'\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getDriverUserData(\r\n    id: number\r\n  ): Observable<DriverUser> {\r\n    return this.httpClient\r\n\r\n      .get('driver/'+id.toString(), options)\r\n      .pipe(\r\n        map((data: DriverUser) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n  public acceptRegisteredDriver(\r\n    id: number\r\n  ): Observable<boolean> {\r\n    return this.httpClient\r\n\r\n      .get('driver/acceptRegisterDriver/'+id.toString(), options)\r\n      .pipe(\r\n        map((data: boolean) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n  public updateDriver(\r\n    driver: DriverUser\r\n  ): Observable<boolean> {\r\n    return this.httpClient\r\n\r\n      .put('driver',driver ,options)\r\n      .pipe(\r\n        map((data: boolean) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n  public changeUserStatus(\r\n    statusAction: StatusAction\r\n  ): Observable<boolean> {\r\n    return this.httpClient\r\n\r\n      .put('system/changeUserStatus',statusAction ,options)\r\n      .pipe(\r\n        map((data: boolean) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public submitDriverPictures(formData : FormData) : Observable<boolean>{\r\n    //const headers = new HttpHeaders().append('Content-Type', 'multipart/form-data');\r\n    return this.httpClient.post(\"driver/upload\", formData).pipe(\r\n      map((data: boolean) => {\r\n        return data;\r\n      }), catchError( error => {\r\n        return throwError( 'Errrorrrr not found!' );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  public getNewDriverUsers(\r\n    pagination: Pagination\r\n  ): Observable<DriversPaginationResult> {\r\n    return this.httpClient\r\n      .post('driver/getNewDriverUsers', pagination, options)\r\n      .pipe(\r\n        map((data: DriversPaginationResult) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public getUsers(\r\n    pagination: Pagination\r\n  ): Observable<DriversPaginationResult> {\r\n    return this.httpClient\r\n      .post('driver/Users', pagination, options)\r\n      .pipe(\r\n        map((data: DriversPaginationResult) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"]}