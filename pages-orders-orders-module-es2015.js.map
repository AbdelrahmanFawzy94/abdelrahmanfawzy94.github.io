{"version":3,"sources":["./src/app/modules/dashboard/pages/orders/orders-routing.module.ts","./src/app/modules/dashboard/pages/orders/orders.component.ts","./src/app/modules/dashboard/pages/orders/orders.component.html","./src/app/modules/dashboard/pages/orders/orders.module.ts"],"names":[],"mappings":"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","file":"pages-orders-orders-module-es2015.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { OrdersComponent } from './orders.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrdersComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrdersRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {AgentUser, Order, UserAccount} from '../../../../@core/models/data-objects';\r\nimport { UserService } from '../user/user.service';\r\nimport { AuthService } from '../../../../@core/services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { OrderService } from './order.service';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss'],\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  loggedUser: AgentUser;\r\n  isLoading = false;\r\n  displayedColumns: string[] = [\r\n    // 'id',\r\n    'orderNumber',\r\n    'fromAgent',\r\n    'toCustomer',\r\n  ];\r\n  dataSource: MatTableDataSource<Order>;\r\n  total = 0;\r\n  page = 1;\r\n  perPage = 5;\r\n\r\n  baseURL = '';\r\n  assetsPath = '/Assets/Images/Drivers/';\r\n  personalPhotosPath = 'PersonalPhotos';\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedUser = this.authService.getLoggedUser();\r\n    this.isLoading = true;\r\n    this.baseURL = this.authService.getBaseURL();\r\n    this.getOrders(this.page, this.perPage);\r\n  }\r\n\r\n  getOrders(page: number, perPage: number) {\r\n    this.orderService\r\n      .getUserOrders({ userId: this.loggedUser.id  ,  page, numberOfObjectsPerPage: perPage })\r\n      .subscribe((data) => {\r\n        this.dataSource = new MatTableDataSource<Order>(data.orders);\r\n        this.total = data.total;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onPageChanges(e: PageEvent) {\r\n    this.isLoading = true;\r\n    this.page = e.pageIndex + 1;\r\n    this.perPage = e.pageSize;\r\n    this.getOrders(this.page, this.perPage);\r\n  }\r\n\r\n  routeUser(id: number) {\r\n    console.log(id);\r\n    this.router.navigate(['dashboard/order/', id]);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header bg-white py-0\">\r\n    <div class=\"mat-card-header\">\r\n      <i class=\"fas fa-user-check bg-danger\"></i>\r\n      <span class=\"text-capitalize mx-3\">orders</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body mat-card-body\">\r\n    <div class=\"table-responsive\">\r\n      <!-- <div *ngIf=\"isLoading\" class=\"overlay\">\r\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n      </div> -->\r\n      <div class=\"table-container\">\r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n          <!-- id Column -->\r\n          <ng-container matColumnDef=\"orderNumber\">\r\n            <mat-header-cell *matHeaderCellDef> Order number </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n          </ng-container>\r\n\r\n\r\n\r\n          <!-- first_name Column -->\r\n          <ng-container matColumnDef=\"fromAgent\">\r\n            <mat-header-cell *matHeaderCellDef> From agent </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              {{ element.agent.fullname }}\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- email Column -->\r\n          <ng-container matColumnDef=\"toCustomer\">\r\n            <mat-header-cell *matHeaderCellDef> To customer </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              {{ element.customerName }}\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- last_name Column -->\r\n          <!--          <ng-container matColumnDef=\"last_name\">-->\r\n          <!--            <mat-header-cell *matHeaderCellDef> last name </mat-header-cell>-->\r\n          <!--            <mat-cell *matCellDef=\"let element\">-->\r\n          <!--              {{ element.last_name }}-->\r\n          <!--            </mat-cell>-->\r\n          <!--          </ng-container>-->\r\n\r\n          <mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n          ></mat-header-row>\r\n          <mat-row\r\n            (click)=\"routeUser(row.id)\"\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n          ></mat-row>\r\n        </mat-table>\r\n      </div>\r\n    </div>\r\n    <mat-paginator\r\n      [length]=\"total\"\r\n      [pageSize]=\"perPage\"\r\n      [pageSizeOptions]=\"[5, 10]\"\r\n      (page)=\"onPageChanges($event)\"\r\n    ></mat-paginator>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../../../shared/shared.module'; ////////////////////////////////////////////////////////////////\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\n\r\nimport { OrdersComponent } from './orders.component';\r\n\r\n@NgModule({\r\n  declarations: [OrdersComponent],\r\n  imports: [CommonModule, OrdersRoutingModule, SharedModule],\r\n  providers: [],\r\n})\r\nexport class OrdersModule {}\r\n"],"sourceRoot":"webpack:///"}