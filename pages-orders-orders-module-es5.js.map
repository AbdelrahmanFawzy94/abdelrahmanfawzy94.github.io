{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/orders/orders-routing.module.ts","webpack:///src/app/modules/dashboard/pages/orders/orders.component.ts","webpack:///src/app/modules/dashboard/pages/orders/orders.component.html","webpack:///src/app/modules/dashboard/pages/orders/orders.module.ts"],"names":["routes","path","component","OrdersRoutingModule","forChild","imports","exports","OrdersComponent","orderService","authService","router","isLoading","displayedColumns","total","page","perPage","baseURL","assetsPath","personalPhotosPath","loggedUser","getLoggedUser","getBaseURL","getOrders","getUserOrders","userId","id","numberOfObjectsPerPage","subscribe","data","dataSource","orders","e","pageIndex","pageSize","console","log","navigate","onPageChanges","selector","templateUrl","styleUrls","OrdersModule","declarations","providers"],"mappings":"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","file":"pages-orders-orders-module-es5.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { OrdersComponent } from './orders.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrdersComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrdersRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {AgentUser, Order, UserAccount} from '../../../../@core/models/data-objects';\r\nimport { UserService } from '../user/user.service';\r\nimport { AuthService } from '../../../../@core/services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { OrderService } from './order.service';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss'],\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  loggedUser: AgentUser;\r\n  isLoading = false;\r\n  displayedColumns: string[] = [\r\n    // 'id',\r\n    'orderNumber',\r\n    'fromAgent',\r\n    'toCustomer',\r\n  ];\r\n  dataSource: MatTableDataSource<Order>;\r\n  total = 0;\r\n  page = 1;\r\n  perPage = 5;\r\n\r\n  baseURL = '';\r\n  assetsPath = '/Assets/Images/Drivers/';\r\n  personalPhotosPath = 'PersonalPhotos';\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedUser = this.authService.getLoggedUser();\r\n    this.isLoading = true;\r\n    this.baseURL = this.authService.getBaseURL();\r\n    this.getOrders(this.page, this.perPage);\r\n  }\r\n\r\n  getOrders(page: number, perPage: number) {\r\n    this.orderService\r\n      .getUserOrders({ userId: this.loggedUser.id  ,  page, numberOfObjectsPerPage: perPage })\r\n      .subscribe((data) => {\r\n        this.dataSource = new MatTableDataSource<Order>(data.orders);\r\n        this.total = data.total;\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onPageChanges(e: PageEvent) {\r\n    this.isLoading = true;\r\n    this.page = e.pageIndex + 1;\r\n    this.perPage = e.pageSize;\r\n    this.getOrders(this.page, this.perPage);\r\n  }\r\n\r\n  routeUser(id: number) {\r\n    console.log(id);\r\n    this.router.navigate(['dashboard/order/', id]);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header bg-white py-0\">\r\n    <div class=\"mat-card-header\">\r\n      <i class=\"fas fa-user-check bg-danger\"></i>\r\n      <span class=\"text-capitalize mx-3\">orders</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body mat-card-body\">\r\n    <div class=\"table-responsive\">\r\n      <!-- <div *ngIf=\"isLoading\" class=\"overlay\">\r\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n      </div> -->\r\n      <div class=\"table-container\">\r\n        <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n          <!-- id Column -->\r\n          <ng-container matColumnDef=\"orderNumber\">\r\n            <mat-header-cell *matHeaderCellDef> Order number </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n          </ng-container>\r\n\r\n\r\n\r\n          <!-- first_name Column -->\r\n          <ng-container matColumnDef=\"fromAgent\">\r\n            <mat-header-cell *matHeaderCellDef> From agent </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              {{ element.agent.fullname }}\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- email Column -->\r\n          <ng-container matColumnDef=\"toCustomer\">\r\n            <mat-header-cell *matHeaderCellDef> To customer </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              {{ element.customerName }}\r\n            </mat-cell>\r\n          </ng-container>\r\n\r\n          <!-- last_name Column -->\r\n          <!--          <ng-container matColumnDef=\"last_name\">-->\r\n          <!--            <mat-header-cell *matHeaderCellDef> last name </mat-header-cell>-->\r\n          <!--            <mat-cell *matCellDef=\"let element\">-->\r\n          <!--              {{ element.last_name }}-->\r\n          <!--            </mat-cell>-->\r\n          <!--          </ng-container>-->\r\n\r\n          <mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n          ></mat-header-row>\r\n          <mat-row\r\n            (click)=\"routeUser(row.id)\"\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n          ></mat-row>\r\n        </mat-table>\r\n      </div>\r\n    </div>\r\n    <mat-paginator\r\n      [length]=\"total\"\r\n      [pageSize]=\"perPage\"\r\n      [pageSizeOptions]=\"[5, 10]\"\r\n      (page)=\"onPageChanges($event)\"\r\n    ></mat-paginator>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../../../shared/shared.module'; ////////////////////////////////////////////////////////////////\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\n\r\nimport { OrdersComponent } from './orders.component';\r\n\r\n@NgModule({\r\n  declarations: [OrdersComponent],\r\n  imports: [CommonModule, OrdersRoutingModule, SharedModule],\r\n  providers: [],\r\n})\r\nexport class OrdersModule {}\r\n"]}