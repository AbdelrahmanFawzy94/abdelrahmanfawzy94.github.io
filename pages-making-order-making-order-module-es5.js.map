{"version":3,"sources":["webpack:///src/app/modules/dashboard/pages/making-order/making-order-routing.module.ts","webpack:///src/app/modules/dashboard/pages/making-order/making-order.component.ts","webpack:///src/app/modules/dashboard/pages/making-order/making-order.component.html","webpack:///src/app/modules/dashboard/pages/making-order/making-order.module.ts"],"names":["routes","path","component","MakingOrderRoutingModule","forChild","imports","exports","MakingOrderComponent","loader","authService","systemService","orderService","translate","orderResult","order","orderItem","orderItems","Array","markers","zoom","options","zoomControl","scrollwheel","disableDoubleClickZoom","pickupLoaction","dropLoaction","showMap","choosingPickup","choosingDrop","pickupInputValue","dropInputValue","customerName","customerPhone","customarAddress","itemModel","item","quantity","price","items","loadPaymentTypes","loadProductTypes","navigator","geolocation","getCurrentPosition","position","defaultLocation","lat","coords","latitude","lng","longitude","event","stopPropagation","openMap","e","target","blur","latLng","toJSON","marker","google","maps","Marker","animation","Animation","DROP","get","subscribe","data","console","log","paymentTypes$","getPaymentTypes","productTypes$","getProductTypes","closeMap","description","push","index","splice","successSwal","errorSwal","showLoader$","next","initOrder","submitOrder","fire","setTimeout","document","querySelector","scrollBy","error","agentId","getLoggedUser","id","pickupLocationLat","toString","pickupLocationLong","dropLocationLat","dropLocationLong","obj","key","undefined","stopProbagation","mapClick","resetMap","saveLocation","choosePickup","chooseDrop","addItem","submit","selector","templateUrl","styleUrls","MakingOrderModule","declarations","providers"],"mappings":"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","file":"pages-making-order-making-order-module-es5.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { MakingOrderComponent } from './making-order.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MakingOrderComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MakingOrderRoutingModule {}\r\n","import { LoaderService } from './../../../shared/services/loader.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Order,\r\n  OrderItem,\r\n  OrderResult,\r\n  PaymentType,\r\n  ProductType,\r\n} from 'src/app/@core/models/data-objects';\r\nimport { AuthService } from '../../../../@core/services/auth/auth.service';\r\nimport { SystemService } from '../../../../@core/services/system/system.service';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderService } from '../orders/order.service';\r\nimport { SwalComponent } from '@sweetalert2/ngx-sweetalert2';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\ninterface Item {\r\n  item: string;\r\n  quantity: string;\r\n  price: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-making-order',\r\n  templateUrl: './making-order.component.html',\r\n  styleUrls: ['./making-order.component.scss'],\r\n})\r\nexport class MakingOrderComponent implements OnInit {\r\n  orderResult: OrderResult = new OrderResult();\r\n  order: Order = new Order();\r\n  orderItem: OrderItem = new OrderItem();\r\n  orderItems: Array<OrderItem> = new Array<OrderItem>();\r\n  paymentTypes$: Observable<PaymentType[]>;\r\n  productTypes$: Observable<ProductType[]>;\r\n  markers: google.maps.Marker[] = [];\r\n  zoom = 12;\r\n  defaultLocation: google.maps.LatLngLiteral;\r\n  options: google.maps.MapOptions = {\r\n    zoomControl: true,\r\n    scrollwheel: false,\r\n    disableDoubleClickZoom: true,\r\n\r\n    // maxZoom: 15,\r\n    // minZoom:\r\n  };\r\n  pickupLoaction: google.maps.LatLngLiteral = null;\r\n  dropLoaction: google.maps.LatLngLiteral = null;\r\n  showMap = false;\r\n  choosingPickup = false;\r\n  choosingDrop = false;\r\n\r\n  pickupInputValue = null;\r\n  dropInputValue = null;\r\n\r\n  customerName: string = null;\r\n  customerPhone: string = null;\r\n  customarAddress: string = null;\r\n  itemModel: Item = {\r\n    item: null,\r\n    quantity: null,\r\n    price: null,\r\n  };\r\n\r\n  items: Item[] = [];\r\n\r\n  constructor(\r\n    private loader: LoaderService,\r\n    private authService: AuthService,\r\n    private systemService: SystemService,\r\n    private orderService: OrderService,\r\n    public translate: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPaymentTypes();\r\n    this.loadProductTypes();\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.defaultLocation = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n    });\r\n  }\r\n\r\n  stopProbagation(event: MouseEvent) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  openMap() {\r\n    this.showMap = true;\r\n  }\r\n\r\n  closeMap() {\r\n    this.showMap = false;\r\n  }\r\n\r\n  choosePickup() {\r\n    this.choosingPickup = true;\r\n    this.openMap();\r\n  }\r\n\r\n  chooseDrop() {\r\n    this.choosingDrop = true;\r\n    this.openMap();\r\n  }\r\n\r\n  blur(e: Event) {\r\n    (e.target as HTMLInputElement).blur();\r\n  }\r\n\r\n  mapClick(e: google.maps.MouseEvent) {\r\n    if (this.choosingPickup) {\r\n      this.pickupLoaction = e.latLng.toJSON();\r\n\r\n      const marker = new google.maps.Marker({\r\n        position: this.pickupLoaction,\r\n        animation: google.maps.Animation.DROP,\r\n      });\r\n\r\n      this.markers[0] = marker;\r\n      this.translate.get('newOrder.selected').subscribe((data) => {\r\n        this.pickupInputValue = data;\r\n      });\r\n\r\n      console.log(this.pickupLoaction);\r\n      console.log(this.dropLoaction);\r\n    } else if (this.choosingDrop) {\r\n      this.dropLoaction = e.latLng.toJSON();\r\n\r\n      const marker = new google.maps.Marker({\r\n        position: this.dropLoaction,\r\n        animation: google.maps.Animation.DROP,\r\n      });\r\n\r\n      this.markers[0] = marker;\r\n      this.translate.get('newOrder.selected').subscribe((data) => {\r\n        this.dropInputValue = data;\r\n      });\r\n\r\n      console.log(this.pickupLoaction);\r\n      console.log(this.dropLoaction);\r\n    }\r\n  }\r\n\r\n  loadPaymentTypes() {\r\n    this.paymentTypes$ = this.systemService.getPaymentTypes();\r\n  }\r\n\r\n  loadProductTypes() {\r\n    this.productTypes$ = this.systemService.getProductTypes();\r\n  }\r\n\r\n  saveLocation() {\r\n    this.choosingPickup = false;\r\n    this.choosingDrop = false;\r\n    this.closeMap();\r\n    this.markers = [];\r\n    console.log(this.pickupLoaction);\r\n    console.log(this.dropLoaction);\r\n  }\r\n\r\n  resetMap() {\r\n    this.markers = [];\r\n    if (this.choosingPickup) {\r\n      this.pickupLoaction = null;\r\n      this.pickupInputValue = null;\r\n      console.log(this.pickupLoaction);\r\n      console.log(this.dropLoaction);\r\n    } else if (this.choosingDrop) {\r\n      this.dropLoaction = null;\r\n      this.dropInputValue = null;\r\n      console.log(this.pickupLoaction);\r\n      console.log(this.dropLoaction);\r\n    }\r\n  }\r\n\r\n  addItem() {\r\n    //this.orderItem = new OrderItem();\r\n    // orderItem.item = this.itemModel.item;\r\n    // orderItem.quantity = this.itemModel.quantity;\r\n    // orderItem.price = this.itemModel.price;\r\n    // orderItem.description =\r\n\r\n    if (\r\n      this.orderItem.item &&\r\n      this.orderItem.quantity &&\r\n      this.orderItem.price &&\r\n      this.orderItem.description\r\n    ) {\r\n      if (\r\n        typeof this.orderItem.item === 'string' &&\r\n        typeof this.orderItem.quantity === 'number' &&\r\n        typeof this.orderItem.price === 'number' &&\r\n        typeof this.orderItem.description === 'string'\r\n      ) {\r\n        this.orderItems.push(this.orderItem);\r\n        this.orderItem = new OrderItem();\r\n\r\n        // const item = {\r\n        //   item: this.itemModel.item,\r\n        //   quantity: this.itemModel.quantity,\r\n        //   price: this.itemModel.price,\r\n        // };\r\n        // this.items.push(item);\r\n      }\r\n    }\r\n    // this.itemModel.item = null;\r\n    // this.itemModel.quantity = null;\r\n    // this.itemModel.price = null;\r\n  }\r\n\r\n  deleteItem(index) {\r\n    this.orderItems.splice(index, 1);\r\n  }\r\n\r\n  submit(successSwal: SwalComponent, errorSwal: SwalComponent) {\r\n    // this.checkObjectPropertiesHaveNoValues(this.order);\r\n    this.loader.showLoader$.next(true);\r\n    this.initOrder();\r\n    // const objectToApi = {\r\n    //   AgentId: '1',\r\n    //   PickupLocationLat: this.pickupLoaction.lat,\r\n    //   PickupLocationLong: this.pickupLoaction.lng,\r\n    //   DropLocationLat: this.dropLoaction.lat,\r\n    //   DropLocationLong: this.dropLoaction.lng,\r\n    //   CustomerName: this.customerName,\r\n    //   CustomerPhone: this.customerPhone,\r\n    //   CustomerAddress: this.customarAddress,\r\n    //   OrderItems: this.items,\r\n    // };\r\n\r\n    this.orderService.submitOrder(this.order).subscribe(\r\n      (data) => {\r\n        if (data) {\r\n          this.orderResult = data;\r\n          this.loader.showLoader$.next(false);\r\n          successSwal.fire();\r\n          setTimeout(() => {\r\n            document.querySelector('.content').scrollBy(0, 2000);\r\n          }, 400);\r\n        }\r\n        // edit now\r\n        else {\r\n          this.loader.showLoader$.next(false);\r\n          errorSwal.fire();\r\n        }\r\n      },\r\n      (error) => {\r\n        this.loader.showLoader$.next(false);\r\n        errorSwal.fire();\r\n      }\r\n    );\r\n    //console.log(this.order);\r\n  }\r\n\r\n  initOrder() {\r\n    this.order.agentId = this.authService.getLoggedUser().id;\r\n    this.order.pickupLocationLat = this.pickupLoaction.lat.toString();\r\n    this.order.pickupLocationLong = this.pickupLoaction.lng.toString();\r\n    this.order.dropLocationLat = this.dropLoaction.lat.toString();\r\n    this.order.dropLocationLong = this.dropLoaction.lng.toString();\r\n    this.order.orderItems = this.orderItems;\r\n  }\r\n\r\n  checkObjectPropertiesHaveNoValues(obj) {\r\n    for (let key in obj) {\r\n      if (obj[key] === null || obj[key] !== '' || obj[key] !== undefined)\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"map-modal\" [ngClass]=\"{'d-flex': showMap, 'd-none': !showMap}\" (click)=\"closeMap()\">\r\n  <div class=\"card\" (click)=\"stopProbagation($event)\">\r\n    <div class=\"card-header bg-white py-0\">\r\n      <div class=\"mat-card-header\">\r\n        <i class=\"fas fa-pennant bg-danger\"></i>\r\n        <span class=\"text-capitalize mx-3\">{{'newOrder.location' | translate}}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-body mat-card-body\">\r\n      <div class=\"map\">\r\n        <google-map\r\n          height=\"500px\"\r\n          width=\"100%\"\r\n          [zoom]=\"zoom\"\r\n          [center]=\"defaultLocation\"\r\n          [options]=\"options\"\r\n          (mapClick)=\"mapClick($event)\"\r\n        >\r\n          <map-marker\r\n            *ngFor=\"let marker of markers\"\r\n            [position]=\"marker.getPosition()\"\r\n            [label]=\"marker.getLabel()\"\r\n            [title]=\"marker.getTitle()\"\r\n            [options]=\"marker\"\r\n          >\r\n          </map-marker>\r\n        </google-map>\r\n      </div>\r\n      <div class=\"buttons my-4 d-flex justify-content-center flex-wrap\">\r\n        <div class=\"actions\">\r\n          <button (click)=\"resetMap()\" class=\"btn btn-rose text-capitalize m-1\">\r\n            {{'newOrder.resetMap' | translate}}\r\n          </button>\r\n        </div>\r\n        <div class=\"submit\">\r\n          <button\r\n            (click)=\"saveLocation()\"\r\n            class=\"btn btn-success text-capitalize m-1\"\r\n          >\r\n          {{'newOrder.done' | translate}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"card\">\r\n  <div\r\n    class=\"card-header card-header-shadow gradient-default text-white border-0 inside-card\"\r\n  >\r\n    <h2 class=\"font-weight-normal mb-1 text-capitalize\">{{'newOrder.details' | translate}}</h2>\r\n    <p class=\"card-text mb-1\">{{'newOrder.customerDetails' | translate}}</p>\r\n  </div>\r\n  <div class=\"card-body py-0\">\r\n    <div class=\"row mt-2\">\r\n      <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n        <label class=\"text-capitalize\">{{'newOrder.customerName' | translate}} </label>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"order.customerName\"\r\n          class=\"form-control\"\r\n          name=\"customerName\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n        <label class=\"text-capitalize\">{{'newOrder.customerPhone' | translate}}</label>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"order.customerPhone\"\r\n          class=\"form-control\"\r\n          name=\"customerPhone\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n        <label class=\"text-capitalize\">{{'newOrder.address' | translate}}</label>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"order.customerAddress\"\r\n          class=\"form-control\"\r\n          name=\"customarAddress\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n        <label class=\"text-capitalize\">{{'newOrder.paymentMethod' | translate}}</label>\r\n        <select\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"order.paymentTypeId\"\r\n          name=\"paymentMethod\"\r\n        >\r\n          <option\r\n            *ngFor=\"let paymentType of paymentTypes$ | async\"\r\n            [value]=\"paymentType.id\"\r\n          >\r\n            {{ translate.currentLang === 'ar'? paymentType.arabicType: paymentType.type }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n        <label class=\"text-capitalize\">{{'newOrder.pickUpLocation' | translate}}</label>\r\n        <input\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"pickupInputValue\"\r\n          (click)=\"choosePickup(); blur($event)\"\r\n          type=\"text\"\r\n          name=\"pickupLocation\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n        <label class=\"text-capitalize\">{{'newOrder.dropLocation' | translate}}</label>\r\n        <input\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"dropInputValue\"\r\n          (click)=\"chooseDrop(); blur($event)\"\r\n          type=\"text\"\r\n          name=\"dropLocation\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"card mt-4\">\r\n  <div\r\n    class=\"card-header card-header-shadow gradient-default text-white border-0 inside-card\"\r\n  >\r\n    <h2 class=\"font-weight-normal mb-1 text-capitalize\">{{'newOrder.item' | translate}}</h2>\r\n    <p class=\"card-text mb-1\">{{'newOrder.itemDetails' | translate}}</p>\r\n\r\n  </div>\r\n  <div class=\"card-body py-0\">\r\n    <div class=\"orders mt-2\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n          <label class=\"text-capitalize\">{{'newOrder.productType' | translate}}</label>\r\n          <select\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"order.productTypeId\"\r\n            name=\"paymentMethod\"\r\n          >\r\n            <option\r\n              *ngFor=\"let productType of productTypes$ | async\"\r\n              [value]=\"productType.id\"\r\n            >\r\n              {{ translate.currentLang === 'ar'? productType.arabicType: productType.type }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group col-12\">\r\n          <label class=\"text-capitalize\">{{'newOrder.description' | translate}}</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"order.description\"\r\n            class=\"form-control\"\r\n            name=\"mobile\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12\">\r\n          <label class=\"text-capitalize\">{{'newOrder.item' | translate}}</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"orderItem.item\"\r\n            class=\"form-control\"\r\n            name=\"address\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group col-xl-2 col-md-2 col-4\">\r\n          <label class=\"text-capitalize\">{{'newOrder.quantity' | translate}}</label>\r\n          <input\r\n            type=\"number\"\r\n            [(ngModel)]=\"orderItem.quantity\"\r\n            class=\"form-control\"\r\n            name=\"birthYear\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group col-xl-2 col-md-2 col-4\">\r\n          <label class=\"text-capitalize\">{{'newOrder.price' | translate}}</label>\r\n          <input\r\n            type=\"number\"\r\n            [(ngModel)]=\"orderItem.price\"\r\n            class=\"form-control\"\r\n            name=\"mobile\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group col-12\">\r\n          <label class=\"text-capitalize\">{{'newOrder.itemDescription' | translate}}</label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"orderItem.description\"\r\n            class=\"form-control\"\r\n            name=\"mobile\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group col-xl-7 col-md-2 col-6 d-flex align-items-end\">\r\n          <button\r\n            class=\"btn btn-info btn-sm text-capitalize\"\r\n            (click)=\"addItem()\"\r\n          >\r\n            <i class=\"fas fa-plus\"> </i>\r\n            {{'newOrder.add' | translate}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"items\">\r\n        <div class=\"row\">\r\n          <div\r\n            class=\"col-12 col-sm-6 col-md-4 col-lg-3 my-2\"\r\n            *ngFor=\"let item of orderItems; let i = index\"\r\n          >\r\n            <div class=\"item border-default border py-3\">\r\n              <div class=\"item-name d-flex justify-content-center\">\r\n                <span class=\"text-capitalize mx-1\">{{'newOrder.item' | translate}} :</span>\r\n                <span class=\"h5 text-capitalize mx-1\">{{ item.item }}</span>\r\n              </div>\r\n              <div class=\"quantity d-flex justify-content-center\">\r\n                <span class=\"text-capitalize mx-1\">{{'newOrder.quantity' | translate}} :</span>\r\n                <span class=\"h5 text-capitalize mx-1\">\r\n                  {{ item.quantity }}\r\n                </span>\r\n              </div>\r\n              <div class=\"price d-flex justify-content-center\">\r\n                <span class=\"text-capitalize mx-1\">{{'newOrder.price' | translate}} :</span>\r\n                <span class=\"h5 text-capitalize mx-1\">\r\n                  {{ item.price }}\r\n                </span>\r\n              </div>\r\n\r\n              <div class=\"item-name d-flex justify-content-center\">\r\n                <span class=\"text-capitalize mx-1\">{{'newOrder.description' | translate}} :</span>\r\n                <span class=\"h5 text-capitalize mx-1\">{{\r\n                  item.description\r\n                }}</span>\r\n              </div>\r\n              <div class=\"delete-button d-flex justify-content-center\">\r\n                <button class=\"btn btn-icon btn-rose\" (click)=\"deleteItem(i)\">\r\n                  <i class=\"far fa-trash-alt\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12 d-flex justify-content-center py-2 mb-4\">\r\n        <button (click)=\"submit(success, error)\" class=\"btn btn-success text-capitalize\">\r\n          {{'newOrder.requestCaptain' | translate}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"orderResult != null && orderResult.orderNumber > 0\"\r\n  class=\"card mt-4\"\r\n>\r\n  <div\r\n    class=\"card-header card-header-shadow gradient-info text-white border-0 inside-card\"\r\n  >\r\n    <h2 class=\"text-capitalize font-weight-normal\">{{'newOrder.captainInformation' | translate}}</h2>\r\n  </div>\r\n  <div class=\"card-body py-0\">\r\n    <div class=\"orders mt-2\">\r\n      <!-- اسم رقم الاوردر التليفون -->\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12 d-flex align-items-center\"\r\n        >\r\n          <h5 class=\"text-capitalize\">{{'newOrder.orderNumber' | translate}} :</h5>\r\n          <h3 class=\"text-capitalize font-weight-normal mx-1\">\r\n            {{ orderResult.orderNumber }}\r\n          </h3>\r\n        </div>\r\n        <div\r\n          class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12 d-flex align-items-center\"\r\n        >\r\n          <h5 class=\"text-capitalize\">{{'newOrder.captainName' | translate}} :</h5>\r\n          <h3 class=\"text-capitalize font-weight-normal mx-1\">\r\n            {{ orderResult.captainName }}\r\n          </h3>\r\n        </div>\r\n        <div\r\n          class=\"form-group col-xl-3 col-lg-4 col-md-6 col-sm-12 d-flex align-items-center\"\r\n        >\r\n          <h5 class=\"text-capitalize\">{{'newOrder.captainPhone' | translate}} :</h5>\r\n          <h3 class=\"text-capitalize font-weight-normal mx-1\">\r\n            {{ orderResult.captainMobile }}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal\r\n  #success\r\n  [toast]=\"true\"\r\n  [showConfirmButton]=\"false\"\r\n  timer=\"3000\"\r\n  timerProgressBar=\"true\"\r\n  title=\"{{ 'newOrder.orederDone' | translate }}\"\r\n  icon=\"success\"\r\n  position=\"top-end\"\r\n>\r\n</swal>\r\n\r\n<swal\r\n  #error\r\n  [toast]=\"true\"\r\n  [showConfirmButton]=\"false\"\r\n  timer=\"3000\"\r\n  timerProgressBar=\"true\"\r\n  title=\"{{ 'newOrder.noCaptainAvailable' | translate }}\"\r\n  icon=\"error\"\r\n  position=\"top-end\"\r\n>\r\n</swal>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../../../shared/shared.module'; ////////////////////////////////////////////////////////////////\r\nimport { MakingOrderRoutingModule } from './making-order-routing.module';\r\n\r\nimport { MakingOrderComponent } from './making-order.component';\r\n\r\n@NgModule({\r\n  declarations: [MakingOrderComponent],\r\n  imports: [CommonModule, MakingOrderRoutingModule, SharedModule],\r\n  providers: [],\r\n})\r\nexport class MakingOrderModule {}\r\n"]}