{"version":3,"sources":["./src/app/modules/dashboard/pages/orders/order.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AACjB;AACG;;;AAOjD,MAAM,OAAO,GAAG;IACd,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CAEH,CAAC;AAKK,MAAM,YAAY;IAEvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAEvC,SAAS,CACd,UAAsB;QAEtB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,cAAc,EAAE,UAAU,EAAE,OAAO,CAAC;aACzC,IAAI,CACH,0DAAG,CAAC,CAAC,IAA4B,EAAE,EAAE;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,OAAO,uDAAU,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IACM,aAAa,CAClB,UAA0B;QAE1B,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,kBAAkB,EAAE,UAAU,EAAE,OAAO,CAAC;aAC7C,IAAI,CACH,0DAAG,CAAC,CAAC,IAA4B,EAAE,EAAE;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,OAAO,uDAAU,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAEM,QAAQ,CACb,EAAS;QAET,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,QAAQ,GAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC;aACpC,IAAI,CACH,0DAAG,CAAC,CAAC,IAAW,EAAE,EAAE;YAClB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,OAAO,uDAAU,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAGM,WAAW,CAChB,KAAY;QAEZ,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAG,OAAO,CAAC;aAC/B,IAAI,CACH,0DAAG,CAAC,CAAC,IAAiB,EAAE,EAAE;YACxB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,OAAO,uDAAU,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;wEA9DU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport {\r\n  AgentsPaginationResult, AgentUser,\r\n  DriversPaginationResult, Order, OrderResult, OrdersPaginationResult,\r\n  Pagination, PaginationUser, SupportsPaginationResult, SupportUser, User,\r\n} from '../../../../@core/models/data-objects';\r\n\r\nconst options = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  }),\r\n  // observe: 'response'\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getOrders(\r\n    pagination: Pagination\r\n  ): Observable<OrdersPaginationResult> {\r\n    return this.httpClient\r\n      .post('order/Orders', pagination, options)\r\n      .pipe(\r\n        map((data: OrdersPaginationResult) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n  public getUserOrders(\r\n    pagination: PaginationUser\r\n  ): Observable<OrdersPaginationResult> {\r\n    return this.httpClient\r\n      .post('order/userOrders', pagination, options)\r\n      .pipe(\r\n        map((data: OrdersPaginationResult) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n  public getOrder(\r\n    id:number\r\n  ): Observable<Order> {\r\n    return this.httpClient\r\n      .get('order/'+id.toString(), options)\r\n      .pipe(\r\n        map((data: Order) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  public submitOrder(\r\n    order: Order\r\n  ): Observable<OrderResult> {\r\n    return this.httpClient\r\n      .post('order/', order , options)\r\n      .pipe(\r\n        map((data: OrderResult) => {\r\n          return data;\r\n        }),\r\n        catchError((error) => {\r\n          return throwError('Errrorrrr not found!');\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}